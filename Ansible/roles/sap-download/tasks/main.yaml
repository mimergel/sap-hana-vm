---

# add later check if binaries are already available in storage account

- name:                                "Create download directories"
  ansible.builtin.file:
    path:                              "{{ item.path }}"
    state:                             directory
    mode:                              0755
  become:                              true
  become_user:                         root
  loop:
    - path: "{{ target_media_location }}"
    - path: "{{ target_media_location }}/tmp"
    - path: "{{ target_media_location }}/bom"
    - path: "{{ target_media_location }}/files"

- name:                                "Download {{ sapcar }}"
  block:
    - name:                            "Download {{ sapcar }}"
      ansible.builtin.get_url:
        url:                           "{{ url_sapcar }}"
        dest:                          "{{ target_media_location }}/{{ sapcar }}"
        mode:                          "u=rwx,g=rx,o=rx"
        tmp_dest:                      "{{ target_media_location }}/tmp"
        url_username:                  "{{ s_user }}"
        url_password:                  "{{ s_password }}"
        force_basic_auth:              true
        http_agent:                    'SAP Software Download'

      become:                          true
      become_user:                     root
      register:                        result
      until:                           result is succeeded or not result.changed
      retries:                         "{{ url_retries_cnt }}"
      delay:                           "{{ url_retries_delay }}"
      no_log:                          false

- name:                                "Download {{ hdbserver }}"
  block:
    - name:                            "Download {{ hdbserver }}"
      ansible.builtin.get_url:
        url:                           "{{ url_hdbserver }}"
        dest:                          "{{ target_media_location }}/{{ hdbserver }}"
        tmp_dest:                      "{{ target_media_location }}/tmp"
        url_username:                  "{{ s_user }}"
        url_password:                  "{{ s_password }}"
        force_basic_auth:              true
        http_agent:                    'SAP Software Download'

      become:                          true
      become_user:                     root
      register:                        result
      until:                           result is succeeded or not result.changed
      retries:                         "{{ url_retries_cnt }}"
      delay:                           "{{ url_retries_delay }}"
      no_log:                          false


- name:                                "Download {{ hcmt }}"
  block:
    - name:                            "Download {{ hcmt }}"
      ansible.builtin.get_url:
        url:                           "{{ url_hcmt }}"
        dest:                          "{{ target_media_location }}/{{ hcmt }}"
        tmp_dest:                      "{{ target_media_location }}/tmp"
        url_username:                  "{{ s_user }}"
        url_password:                  "{{ s_password }}"
        force_basic_auth:              true
        http_agent:                    'SAP Software Download'

      become:                          true
      become_user:                     root
      register:                        result
      until:                           result is succeeded or not result.changed
      retries:                         "{{ url_retries_cnt }}"
      delay:                           "{{ url_retries_delay }}"
      no_log:                          false


# add later optional upload to storage account
#
# - name:                                "BOM: Download Files"
#   ansible.builtin.get_url:
#     url:                               "{{ sapbits_location_base_path }}/{{ sapbits_bom_files }}/archives/{{ item.archive }}\
#                                        {% if sapbits_sas_token is not undefined %}{{ sapbits_sas_token }}{% endif %}"
#     dest:                              "{{ target_media_location }}/{% if item.path is undefined %}downloads{% else %}{{ item.path }}{% endif %}/\
#                                        {% if item.filename is undefined %}{{ item.archive }}{% else %}{{ item.filename }}{% endif %}"
#     mode:                              "{% if item.permissions is undefined %}0644{% else %}{{ item.permissions }}{% endif %}"
#     tmp_dest:                          "{{ target_media_location }}/tmp"
#     checksum:                          "sha256:{{ item.checksum | upper }}"
#     validate_certs:                    true
#   register:                            result
#   until:                               result is succeeded
#   retries:                             2
#   delay:                               5
#   loop:                                "{{ bom.materials.media|flatten(levels=1) }}"
#   vars:
#     ansible_python_interpreter:        "{{ python_version }}"
#   when:
#     - item.download is undefined or item.download
#     - "distro_id == 'suse15' or distro_id == 'redhat82'"


# /*---------------------------------------------------------------------------8
# |                                   END                                      |
# +------------------------------------4--------------------------------------*/

...
